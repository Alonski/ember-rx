{"index":{"version":"2.3.5","fields":["title","text","keywords"],"fieldVectors":[["title/module:ember-rx/decorators/subscribe",[0,2.227]],["text/module:ember-rx/decorators/subscribe",[]],["keywords/module:ember-rx/decorators/subscribe",[1,1.114]],["title/module:ember-rx/helpers/subscribe",[2,2.227]],["text/module:ember-rx/helpers/subscribe",[]],["keywords/module:ember-rx/helpers/subscribe",[]],["title/module:ember-rx/observables/from-property-change",[3,2.227]],["text/module:ember-rx/observables/from-property-change",[]],["keywords/module:ember-rx/observables/from-property-change",[4,1.114]],["title/module:ember-rx/route",[5,2.227]],["text/module:ember-rx/route",[]],["keywords/module:ember-rx/route",[]],["title/module:ember-rx/test-support/setup-scheduler",[6,2.227]],["text/module:ember-rx/test-support/setup-scheduler",[]],["keywords/module:ember-rx/test-support/setup-scheduler",[7,1.114]],["title/module:ember-rx/utils/first-to-promise",[8,2.227]],["text/module:ember-rx/utils/first-to-promise",[]],["keywords/module:ember-rx/utils/first-to-promise",[9,1.114]],["title/template:docs/cookbook/count-prop-changes/example",[]],["text/template:docs/cookbook/count-prop-changes/example",[10,2.363,11,1.934]],["keywords/template:docs/cookbook/count-prop-changes/example",[]],["title/template:docs/cookbook/count-prop-changes",[11,0.757,12,0.925,13,0.925]],["text/template:docs/cookbook/count-prop-changes",[11,1.721,12,2.102,13,2.102]],["keywords/template:docs/cookbook/count-prop-changes",[]],["title/template:docs/cookbook/index",[14,1.746]],["text/template:docs/cookbook/index",[10,1,14,1,15,1.275,16,1.275,17,1.275,18,1.275,19,1.275,20,1.275,21,1.275,22,1.275,23,1.275,24,1.275,25,1]],["keywords/template:docs/cookbook/index",[]],["title/template:docs/index",[26,1.746]],["text/template:docs/index",[25,0.766,26,0.423,27,0.539,28,0.977,29,0.539,30,0.539,31,0.539,32,0.977,33,0.977,34,0.539,35,0.539,36,0.539,37,0.539,38,1.34,39,0.977,40,0.539,41,0.977,42,0.539,43,0.539,44,0.539,45,0.539,46,0.977,47,0.539,48,0.539,49,0.539,50,0.539,51,0.539,52,0.423,53,0.977]],["keywords/template:docs/index",[]],["title/template:docs",[]],["text/template:docs",[]],["keywords/template:docs",[]],["title/template:index",[]],["text/template:index",[]],["keywords/template:index",[]],["title/template:testing/observable-model",[]],["text/template:testing/observable-model",[]],["keywords/template:testing/observable-model",[]],["title/template:application-tailwind",[54,1.209,55,1.209]],["text/template:application-tailwind",[52,1.579,54,1.579,55,1.579,56,2.014,57,2.014,58,2.014]],["keywords/template:application-tailwind",[]],["title/template:docs/api/item",[]],["text/template:docs/api/item",[]],["keywords/template:docs/api/item",[]]],"invertedIndex":[["",{"_index":53,"title":{},"text":{"template:docs/index":{"position":[[388,1],[401,1]]}},"keywords":{}}],["6",{"_index":48,"title":{},"text":{"template:docs/index":{"position":[[295,1]]}},"keywords":{}}],["add",{"_index":43,"title":{},"text":{"template:docs/index":{"position":[[240,3]]}},"keywords":{}}],["allow",{"_index":45,"title":{},"text":{"template:docs/index":{"position":[[261,6]]}},"keywords":{}}],["app",{"_index":52,"title":{},"text":{"template:docs/index":{"position":[[376,4]]},"template:application-tailwind":{"position":[[67,4]]}},"keywords":{}}],["chang",{"_index":11,"title":{"template:docs/cookbook/count-prop-changes":{"position":[[18,7]]}},"text":{"template:docs/cookbook/count-prop-changes/example":{"position":[[10,8]]},"template:docs/cookbook/count-prop-changes":{"position":[[18,7]]}},"keywords":{}}],["class",{"_index":58,"title":{},"text":{"template:application-tailwind":{"position":[[53,5]]}},"keywords":{}}],["cookbook",{"_index":14,"title":{"template:docs/cookbook/index":{"position":[[0,8]]}},"text":{"template:docs/cookbook/index":{"position":[[0,8]]}},"keywords":{}}],["count",{"_index":12,"title":{"template:docs/cookbook/count-prop-changes":{"position":[[0,8]]}},"text":{"template:docs/cookbook/count-prop-changes":{"position":[[0,8]]}},"keywords":{}}],["differ",{"_index":23,"title":{},"text":{"template:docs/cookbook/index":{"position":[[120,9]]}},"keywords":{}}],["do",{"_index":40,"title":{},"text":{"template:docs/index":{"position":[[214,5]]}},"keywords":{}}],["ember",{"_index":30,"title":{},"text":{"template:docs/index":{"position":[[51,5]]}},"keywords":{}}],["ember-auto-import",{"_index":51,"title":{},"text":{"template:docs/index":{"position":[[316,18]]}},"keywords":{}}],["ember-rx",{"_index":25,"title":{},"text":{"template:docs/cookbook/index":{"position":[[142,9]]},"template:docs/index":{"position":[[13,8],[202,8]]}},"keywords":{}}],["ember-rx/decorators/subscrib",{"_index":0,"title":{"module:ember-rx/decorators/subscribe":{"position":[[0,29]]}},"text":{},"keywords":{}}],["ember-rx/helpers/subscrib",{"_index":2,"title":{"module:ember-rx/helpers/subscribe":{"position":[[0,26]]}},"text":{},"keywords":{}}],["ember-rx/observables/from-property-chang",{"_index":3,"title":{"module:ember-rx/observables/from-property-change":{"position":[[0,41]]}},"text":{},"keywords":{}}],["ember-rx/rout",{"_index":5,"title":{"module:ember-rx/route":{"position":[[0,14]]}},"text":{},"keywords":{}}],["ember-rx/test-support/setup-schedul",{"_index":6,"title":{"module:ember-rx/test-support/setup-scheduler":{"position":[[0,37]]}},"text":{},"keywords":{}}],["ember-rx/utils/first-to-promis",{"_index":8,"title":{"module:ember-rx/utils/first-to-promise":{"position":[[0,31]]}},"text":{},"keywords":{}}],["ember-rxember-rx",{"_index":44,"title":{},"text":{"template:docs/index":{"position":[[244,16]]}},"keywords":{}}],["exampl",{"_index":21,"title":{},"text":{"template:docs/cookbook/index":{"position":[[102,8]]}},"keywords":{}}],["featur",{"_index":24,"title":{},"text":{"template:docs/cookbook/index":{"position":[[130,8]]}},"keywords":{}}],["firsttopromis",{"_index":9,"title":{},"text":{},"keywords":{"module:ember-rx/utils/first-to-promise":{"position":[null]}}}],["follow",{"_index":41,"title":{},"text":{"template:docs/index":{"position":[[224,10],[339,9]]}},"keywords":{}}],["frompropertychang",{"_index":4,"title":{},"text":{},"keywords":{"module:ember-rx/observables/from-property-change":{"position":[null]}}}],["function",{"_index":35,"title":{},"text":{"template:docs/index":{"position":[[128,13]]}},"keywords":{}}],["gener",{"_index":57,"title":{},"text":{"template:application-tailwind":{"position":[[43,9]]}},"keywords":{}}],["idea",{"_index":15,"title":{},"text":{"template:docs/cookbook/index":{"position":[[19,4]]}},"keywords":{}}],["import",{"_index":46,"title":{},"text":{"template:docs/index":{"position":[[275,6],[381,6]]}},"keywords":{}}],["instal",{"_index":39,"title":{},"text":{"template:docs/index":{"position":[[173,12],[194,7]]}},"keywords":{}}],["integr",{"_index":37,"title":{},"text":{"template:docs/index":{"position":[[150,11]]}},"keywords":{}}],["introduct",{"_index":26,"title":{"template:docs/index":{"position":[[0,12]]}},"text":{"template:docs/index":{"position":[[0,12]]}},"keywords":{}}],["let'",{"_index":19,"title":{},"text":{"template:docs/cookbook/index":{"position":[[76,5]]}},"keywords":{}}],["librari",{"_index":18,"title":{},"text":{"template:docs/cookbook/index":{"position":[[67,8]]}},"keywords":{}}],["look",{"_index":20,"title":{},"text":{"template:docs/cookbook/index":{"position":[[82,4]]}},"keywords":{}}],["number",{"_index":10,"title":{},"text":{"template:docs/cookbook/count-prop-changes/example":{"position":[[0,6]]},"template:docs/cookbook/index":{"position":[[92,6]]}},"keywords":{}}],["observ",{"_index":33,"title":{},"text":{"template:docs/index":{"position":[[84,12],[390,10]]}},"keywords":{}}],["possibl",{"_index":17,"title":{},"text":{"template:docs/cookbook/index":{"position":[[48,8]]}},"keywords":{}}],["properti",{"_index":13,"title":{"template:docs/cookbook/count-prop-changes":{"position":[[9,8]]}},"text":{"template:docs/cookbook/count-prop-changes":{"position":[[9,8]]}},"keywords":{}}],["provid",{"_index":28,"title":{},"text":{"template:docs/index":{"position":[[32,7],[114,8]]}},"keywords":{}}],["refer",{"_index":56,"title":{},"text":{"template:application-tailwind":{"position":[[23,9]]}},"keywords":{}}],["rxj",{"_index":38,"title":{},"text":{"template:docs/index":{"position":[[167,5],[282,4],[408,7]]}},"keywords":{}}],["serv",{"_index":27,"title":{},"text":{"template:docs/index":{"position":[[22,6]]}},"keywords":{}}],["setupschedul",{"_index":7,"title":{},"text":{},"keywords":{"module:ember-rx/test-support/setup-scheduler":{"position":[null]}}}],["specif",{"_index":34,"title":{},"text":{"template:docs/index":{"position":[[97,13]]}},"keywords":{}}],["style",{"_index":55,"title":{"template:application-tailwind":{"position":[[14,6]]}},"text":{"template:application-tailwind":{"position":[[14,6]]}},"keywords":{}}],["subscrib",{"_index":1,"title":{},"text":{},"keywords":{"module:ember-rx/decorators/subscribe":{"position":[null]}}}],["suit",{"_index":29,"title":{},"text":{"template:docs/index":{"position":[[42,5]]}},"keywords":{}}],["tailwind",{"_index":54,"title":{"template:application-tailwind":{"position":[[5,8]]}},"text":{"template:application-tailwind":{"position":[[5,8]]}},"keywords":{}}],["thank",{"_index":50,"title":{},"text":{"template:docs/index":{"position":[[306,6]]}},"keywords":{}}],["thing",{"_index":16,"title":{},"text":{"template:docs/cookbook/index":{"position":[[32,6]]}},"keywords":{}}],["through",{"_index":36,"title":{},"text":{"template:docs/index":{"position":[[142,7]]}},"keywords":{}}],["us",{"_index":22,"title":{},"text":{"template:docs/cookbook/index":{"position":[[116,3]]}},"keywords":{}}],["util",{"_index":31,"title":{},"text":{"template:docs/index":{"position":[[57,9]]}},"keywords":{}}],["version",{"_index":47,"title":{},"text":{"template:docs/index":{"position":[[287,7]]}},"keywords":{}}],["well",{"_index":49,"title":{},"text":{"template:docs/index":{"position":[[300,5]]}},"keywords":{}}],["work",{"_index":32,"title":{},"text":{"template:docs/index":{"position":[[71,7],[362,5]]}},"keywords":{}}],["yarn",{"_index":42,"title":{},"text":{"template:docs/index":{"position":[[235,4]]}},"keywords":{}}]],"pipeline":["stemmer"]},"documents":{"module:ember-rx/decorators/subscribe":{"id":"module:ember-rx/decorators/subscribe","type":"module","title":"ember-rx/decorators/subscribe","keywords":["subscribe"],"item":{"type":"module","id":"ember-rx/decorators/subscribe","attributes":{"file":"ember-rx/decorators/subscribe","functions":[{"name":"subscribe","description":"<div class=\"docs-md\"><p>This function can be applied as a decorator to a class.</p>\n<p>Somewhat like a Computed Property, it is passed the name of\nanother property -- a property that is an Observable. The propeperty\ndecorated will follow the most recent value emitted by the Observable.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> Component <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"@ember/component\"</span>;\n<span class=\"hljs-keyword\">import</span> { subscribe } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"ember-rx\"</span>;\n<span class=\"hljs-keyword\">import</span> currentTimeObservable <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"wherever\"</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WithCurrentTime</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  currentTime$ = currentTimeObservable;\n\n  @subscribe(<span class=\"hljs-string\">'currentTime$'</span>) currentTime;\n}</code></pre>\n<p>If you provide an initializer for the property, that value will be used\nbefore a value is emitted.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DataLoader</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  data$ = someObservableThatMayTakeAWhile;\n\n  @subscribe(<span class=\"hljs-string\">'data$'</span>)\n  model = [];\n}</code></pre>\n<p>If the dependent observable is replaced, the original subscription will\nbe unsubscribed from and the new observable subscribed to automatically.</p></div>","lineNumber":40,"access":"public","tags":[],"file":"ember-rx/decorators/subscribe","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"observableKey","description":"","type":"string"}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}},"module:ember-rx/helpers/subscribe":{"id":"module:ember-rx/helpers/subscribe","type":"module","title":"ember-rx/helpers/subscribe","keywords":[],"item":{"type":"module","id":"ember-rx/helpers/subscribe","attributes":{"file":"ember-rx/helpers/subscribe","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-rx/helpers/subscribe~SubscribeHelper"}]},"components":{"data":[]}}}},"module:ember-rx/observables/from-property-change":{"id":"module:ember-rx/observables/from-property-change","type":"module","title":"ember-rx/observables/from-property-change","keywords":["fromPropertyChange"],"item":{"type":"module","id":"ember-rx/observables/from-property-change","attributes":{"file":"ember-rx/observables/from-property-change","functions":[{"name":"fromPropertyChange","description":"<div class=\"docs-md\"><p>Create an Observable from the values of a property.</p>\n<p>Each time the property changes, the new value will be emitted from the\nObservable. This can be thought of as a replacement for manually using\n<code>addObserver</code> and <code>removeObserver</code> from Ember&#39;s API.</p></div>","lineNumber":15,"access":"public","tags":[],"file":"ember-rx/observables/from-property-change","returns":{"type":"Observable","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"subject","description":"","type":"EmberObject"},{"nullable":null,"spread":false,"optional":false,"name":"property","description":"","type":"string"}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}},"module:ember-rx/route":{"id":"module:ember-rx/route","type":"module","title":"ember-rx/route","keywords":[],"item":{"type":"module","id":"ember-rx/route","attributes":{"file":"ember-rx/route","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-rx/route~ObservableModelRoute"}]},"components":{"data":[]}}}},"module:ember-rx/test-support/setup-scheduler":{"id":"module:ember-rx/test-support/setup-scheduler","type":"module","title":"ember-rx/test-support/setup-scheduler","keywords":["setupScheduler"],"item":{"type":"module","id":"ember-rx/test-support/setup-scheduler","attributes":{"file":"ember-rx/test-support/setup-scheduler","functions":[{"name":"setupScheduler","description":"<div class=\"docs-md\"><p>Sets up an <a href=\"/docs/api/modules/ember-rx/test-support/utils/test-scheduler~ExtendedTestScheduler\"  class=\"docs-md__a\"><code>ExtendedTestScheduler</code></a>\ninstance on the test context to help create an observable that can be\ncontrolled remotely.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> { setupScheduler } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'ember-rx/test-support'</span>;\n\n<span class=\"hljs-built_in\">module</span>(<span class=\"hljs-string\">'Some Module'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">hooks</span>) </span>{\n  setupScheduler(hooks);\n\n  test(<span class=\"hljs-string\">'Some Test'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">assert</span>) </span>{\n    <span class=\"hljs-keyword\">const</span> testObservable = <span class=\"hljs-keyword\">this</span>.scheduler.createColdObservable(<span class=\"hljs-string\">'--a--b|'</span>, {\n      <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>\n    });\n  });\n});</code></pre></div>","lineNumber":26,"access":"public","tags":[{"name":"returns","value":"{void}"}],"file":"ember-rx/test-support/setup-scheduler","returns":{"type":"void","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"hooks","description":"","type":"object"}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}},"module:ember-rx/utils/first-to-promise":{"id":"module:ember-rx/utils/first-to-promise","type":"module","title":"ember-rx/utils/first-to-promise","keywords":["firstToPromise"],"item":{"type":"module","id":"ember-rx/utils/first-to-promise","attributes":{"file":"ember-rx/utils/first-to-promise","functions":[{"name":"firstToPromise","description":"<div class=\"docs-md\"><p>Converts an <code>Observable</code> into a <code>Promise</code> and an <code>Observable</code></p>\n<p>The <code>Promise</code> will resolve with the first value from the <code>Observable</code>. The\n<code>Observable</code> will emit all future values.</p></div>","lineNumber":13,"access":"public","tags":[],"file":"ember-rx/utils/first-to-promise","returns":{"type":"[Promise, Observable]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"observable","description":"","type":"Observable"}],"isAsync":false,"isGenerator":false,"exportType":"default"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}},"template:docs/cookbook/count-prop-changes/example":{"id":"template:docs/cookbook/count-prop-changes/example","type":"template","title":null,"text":" Number of Changes: ","route":"docs.cookbook.count-prop-changes.example","keywords":[]},"template:docs/cookbook/count-prop-changes":{"id":"template:docs/cookbook/count-prop-changes","type":"template","title":"Counting Property Changes","text":"Counting Property Changes ","route":"docs.cookbook.count-prop-changes","keywords":[]},"template:docs/cookbook/index":{"id":"template:docs/cookbook/index","type":"template","title":"Cookbook","text":"Cookbook To get an idea of some things that are possible with this library, let's look at a number of examples that use different features of ember-rx.","route":"docs.cookbook.index","keywords":[]},"template:docs/index":{"id":"template:docs/index","type":"template","title":"Introduction","text":"Introduction ember-rx serves to provide a suite of Ember utilities for working with Observables. Specifically, it provides this functionality through integration with RxJS. Installation You can install ember-rx by doing the following: yarn add ember-rxember-rx allows you to import RxJS version 6 as well, thanks to ember-auto-import. The following should \"just work\" in your app! import { Observable } from \"rxjs\";","route":"docs.index","keywords":[]},"template:docs":{"id":"template:docs","type":"template","title":null,"text":" ","route":"docs","keywords":[]},"template:index":{"id":"template:index","type":"template","title":null,"text":" ","route":"index","keywords":[]},"template:testing/observable-model":{"id":"template:testing/observable-model","type":"template","title":null,"text":"","route":"testing.observable-model","keywords":[]},"template:application-tailwind":{"id":"template:application-tailwind","type":"template","title":"Your Tailwind styles","text":" Your Tailwind styles A reference for every generated class in your app. ","route":"application-tailwind","keywords":[]},"template:docs/api/item":{"id":"template:docs/api/item","type":"template","title":null,"text":" ","route":"docs.api.item","keywords":[]}}}
